language: node_js
dist: xenial
sudo: required

# ########################
# How to trigger a release
#
# Push a tag to origin:
# - "release" (= patch)
# - "release/patch"
# - "release/minor"
# - "release/major"
# ########################

stages:
  - name: build-test
    if: tag !~ /^release\/(major|minor|patch)$/
  - name: release
    if: tag =~ /^release\/(major|minor|patch)$/

jobs:
  include:
    # Test that it builds correctly
    ###############################
    - stage: build-test
      name: build-test
      services:
        - docker
      script:
        - docker-compose build

    # Deploy stage
    # - code below is common between DAppNode packages
    ##################################################
    - stage: release
      name: release
      services:
        - docker
      script:
        - npm install -g @dappnode/dappnodesdk
        - docker-compose build
        - "TYPE=${TRAVIS_TAG##*/}"
        - "[ ! '$TYPE' = 'release' ] || TYPE='patch'"
        - dappnodesdk publish ${TYPE} --dappnode_team_preset
      node_js:
        - "10.15.3"
      before_deploy:
        - wget https://raw.githubusercontent.com/dappnode/DAppNode/master/scripts/before_deploy.sh
        - source before_deploy.sh
      deploy:
        provider: releases
        prerelease: true
        overwrite: true
        api_key: "$GITHUB_TOKEN"
        file_glob: true
        # $RELEASE_VERSION is exported on before_deploy.sh
        file: build_${RELEASE_VERSION}/*
        skip_cleanup: true
        # $TRAVIS_TAG is exported on before_deploy.sh
        name: "$TRAVIS_TAG"
        body: "# Changelog"
        on:
          tags: true
          condition: "$TRAVIS_TAG = release || $TRAVIS_TAG = release/patch || $TRAVIS_TAG = release/minor || $TRAVIS_TAG = release/major"
      after_deploy:
        - wget https://raw.githubusercontent.com/dappnode/DAppNode/master/scripts/after_deploy.sh
        - source after_deploy.sh
